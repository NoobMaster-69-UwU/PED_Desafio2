<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQEAAADECAMAAACoYGR8AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAIWUExURf///16D4P/dnvdefe/3V96gXQAAAK+wl3vwVPz8/Pb29v/bl/Pz8+Pj4/z47/1ggO7u
        7v/hobm5uVhYWMvLy3p6eu/3T4iIiNTU1LCwsGGH56mpqZOTk/T8WZCQkMPDw6CgoG9vb/dVduXl5YOD
        g2JiYpycnF1dXf/coaHsd+dYdVh/4N2cVd2bW9ra2k9PT/zv2XPwSvzqyf/htYw1R7VFXO73RyAgIDk5
        OZ7yifi/ybuidHsvPtVRbCs8Zlp91uncdxUVFSwsLERERPrk6IVzUvDQlX1sTW4qOK1CWNK2glNzxThO
        hSQyVkRfojFEdIFdNpyhOe71YOX439vklXjqUkKBLW7WS4XuYvWPovZ3kPi9yJqGX1RJNJc5TGElMUkc
        Jdng9HOS4sHN71ZXSpCn5K6+6u3WwMGLUWNIKt+rdfL2ru/0jYSJMNfeTr7FRfX3zXt/LVlcIO3zc8b0
        ubHxntb3zWTDRCRGGVanO9XlnZTVfzpJNUmOMp3RjpPvdef/4BIjDHR+cS5aHy5nGh04E7/ojvanth8V
        APXHtfWaqzszJWlbQS0RF9KZu/R/meK3y4Cd47qfy93Vu8ivpcHAqx4LD+ObtKyehty8ur+NvsTFtHZ3
        ZqChioGg5f2Gl2N6s6mY0BchOA8VJbGuxdi3nKp7R7+TZVtfA2FiR/P3vNTXqK+ygnJ1NquwU8nQSUVH
        GUlMF7MpxesAABchSURBVHhe7Z2LQ9tWlsYvsblBrmXLsmRbfsnyCxaIDeHZ8CpQCG8CadKSEEjT5sEr
        QGink5ntzrQzs5lJ0mSyTbczm2S77SSZHWYzTP/DPVe6fiKDaaDGKr/Y4kqWFZ9P555z7pUw6Igjjjji
        iCOOMACsjzZ0CCVo48fBRn8eCFaWjYC1XCSCGHXJyR5oWZFFERCKcLAD7BVhWQ7BS9BWG1GGBTgO1hMy
        2QBvODA++rjxTYa2DwAJY6wgrPixxYPl3iSHndjNYomF7UnUiy0+DHu1wxrLw8LN4CBCPJahjd0xjBT4
        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
        1AAAAABJRU5ErkJggg==
</value>
  </data>
</root>